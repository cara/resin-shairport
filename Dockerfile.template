FROM resin/%%RESIN_MACHINE_NAME%%-debian:latest

ENV DEVICE_TYPE=%%RESIN_MACHINE_NAME%%
RUN echo "deb http://ftp2.de.debian.org/debian/ jessie main contrib non-free" >> "/etc/apt/sources.list"





RUN apt-get -qq update 




RUN apt-get install -qq -y libpopt-devÂ 


RUN apt-get install -y \
	dnsmasq \
	hostapd \
	iproute2 \
	iw \
	libdbus-1-dev \
	libexpat-dev \
	rfkill


 ###shairport-sync

RUN apt-get install  -qq -yf \
	build-essential \
	git \
	curl \
	autoconf \
	automake \
	libtool \
	libdaemon-dev \
	libasound2-dev \
	libconfig-dev \
	avahi-daemon \
	libavahi-client-dev \
	libssl-dev \
	libsoxr-dev


ENV PYTHON=/usr/sbin/python2


ENV NODE_VERSION 5.7.1

RUN curl -SLO "http://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-armv7l.tar.gz" \
	&& echo "2370e6ad65dedc1eadcc1b3a481e922a8b5afacee9e90eb6700fee876eb59a5b  node-v5.7.1-linux-armv7l.tar.gz" | sha256sum -c - \
	&& tar -xzf "node-v$NODE_VERSION-linux-armv7l.tar.gz" -C /usr/local --strip-components=1 \
	&& rm "node-v$NODE_VERSION-linux-armv7l.tar.gz" \
	&& npm config set unsafe-perm true -g --unsafe-perm \
	&& rm -rf /tmp/*



ARG SHAIRPORT_VERSION=2.8.6
RUN getent group shairport-sync &>/dev/null || sudo groupadd -r shairport-sync >/dev/null  
RUN getent passwd shairport-sync &> /dev/null || sudo useradd -r -M -g shairport-sync -s /usr/bin/nologin -G audio shairport-sync >/dev/null  

RUN curl -Lo /tmp/$SHAIRPORT_VERSION.tar.gz https://github.com/mikebrady/shairport-sync/archive/$SHAIRPORT_VERSION.tar.gz \
      && tar -xzf /tmp/$SHAIRPORT_VERSION.tar.gz -C /tmp \
      && rm /tmp/$SHAIRPORT_VERSION.tar.gz \
      && cd /tmp/shairport-sync-$SHAIRPORT_VERSION \

    && cd /tmp/shairport-sync-$SHAIRPORT_VERSION \
    && autoreconf -i -f  \
    && ./configure --with-alsa \
      --with-avahi \
      --with-ssl=openssl \
      --with-soxr \
      --with-metadata \
      --with-soxr \
      --with-systemd \
    && make \
    && make install \
    && rm -R -f /tmp/shairport-sync-$SHAIRPORT_VERSION 

#RUN systemctl enable shairport-sync

COPY shairport.sh /start
RUN chmod +x /start

ENV AIRPLAY_NAME Docker

ENTRYPOINT [ "/start" ]
 


 ###shairport-sync


RUN mkdir -p /usr/src/app/

WORKDIR /usr/src/app

COPY package.json /usr/src/app/

RUN JOBS=MAX npm install --unsafe-perm --production \
	&& npm cache clean

COPY bower.json .bowerrc /usr/src/app/

RUN ./node_modules/.bin/bower --allow-root install \
	&& ./node_modules/.bin/bower --allow-root cache clean

COPY . /usr/src/app/

RUN ./node_modules/.bin/coffee -c ./src

CMD bash start
